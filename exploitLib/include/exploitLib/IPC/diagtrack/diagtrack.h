
#include "DiagTrack1_h.h"

#pragma comment(lib, "rpcrt4.lib")
#include <rpc.h>
#include <strsafe.h>


// Functions 
RPC_STATUS CreateBindingHandle(LPCWSTR pwszUuid, RPC_BINDING_HANDLE* phBinding);
RPC_STATUS CloseBindingHandle(RPC_BINDING_HANDLE* phBinding);

RPC_BINDING_HANDLE g_hBinding = INVALID_HANDLE_VALUE;

RPC_STATUS CreateBindingHandle(LPCWSTR pwszUuid, RPC_BINDING_HANDLE* phBinding)
{
	RPC_WSTR stringBinding;
	RPC_STATUS rpcStatus;

	rpcStatus = RpcStringBindingCompose((RPC_WSTR)pwszUuid, (RPC_WSTR)L"ncalrpc", nullptr, nullptr, nullptr, &stringBinding);
	if (rpcStatus == RPC_S_OK)
	{
		  { wprintf(L"[DEBUG] RpcStringBindingCompose() OK\n"); }

		rpcStatus = RpcBindingFromStringBinding(stringBinding, phBinding);
		if (rpcStatus == RPC_S_OK)
		{
	  { wprintf(L"[DEBUG] RpcBindingFromStringBinding() OK\n"); }
		}
		else
		{
			wprintf(L"[-] RpcBindingFromStringBinding() failed (Err: 0x%08X)\n", rpcStatus);
		}

		rpcStatus = RpcStringFree(&stringBinding);
		if (rpcStatus == RPC_S_OK)
		{
		 { wprintf(L"[DEBUG] RpcStringFree() OK\n"); }
		}
		else
		{
			wprintf(L"[-] RpcStringFree() failed (Err: 0x%08X)\n", rpcStatus);
		}
	}
	else
	{
		wprintf(L"[-] RpcStringBindingCompose() failed (Err: 0x%08X)\n", rpcStatus);
	}

	return rpcStatus;
}

RPC_STATUS CloseBindingHandle(RPC_BINDING_HANDLE* phBinding)
{
	RPC_STATUS rpcStatus;

	rpcStatus = RpcBindingFree(phBinding);
	if (rpcStatus == RPC_S_OK)
	{
		  { wprintf(L"[DEBUG] RpcBindingFree() OK\n"); }
	}
	else
	{
		wprintf(L"[-] RpcBindingFree() failed (Err: 0x%08X)\n", rpcStatus);
	}

	return rpcStatus;
}
 
void reloadTips()
{
	/*auto hRes = DownloadLatestSettings(g_hBinding, 1, 1);
	if (FAILED(hRes))
	{
		wprintf(L"[-] DownloadLatestSettings() failed (Err: 0x%08X)\n", hRes);
	 
	}
	*/

}